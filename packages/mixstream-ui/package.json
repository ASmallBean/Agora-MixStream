{
  "name": "mixstream-ui",
  "version": "0.1.0",
  "private": true,
  "main": "build/electron/main.js",
  "description": "mix stream app",
  "author": "yangliu@agora.io",
  "homepage": "./",
  "scripts": {
    "start": "concurrently \"pnpm run start:render\" \"pnpm run start:main\"",
    "start:render": "cross-env BROWSER=none react-app-rewired start",
    "start:main": "tsc -p electron && cross-env NODE_ENV=development electron .",
    "build": "pnpm run build:render  && pnpm run build:main",
    "build:dev": "pnpm run build:render:dev  && pnpm run build:main",
    "build:render": "rimraf ./build && cross-env NODE_ENV=production GENERATE_SOURCEMAP=false react-app-rewired build",
    "build:render:dev": "rimraf ./build && cross-env NODE_ENV=development react-app-rewired build",
    "build:main": "rimraf ./dist && tsc -p electron && electron-builder"
  },
  "dependencies": {
    "@netless/fastboard-react": "0.3.2-canary.6",
    "@netless/window-manager": "0.4.18",
    "@types/lodash": "^4.14.182",
    "agora-electron-sdk": "3.7.204-build.510",
    "agora-rtm-sdk": "^1.4.4",
    "antd": "^4.20.2",
    "axios": "^0.27.2",
    "classnames": "^2.3.1",
    "eventemitter3": "^4.0.7",
    "frameless-titlebar": "^2.1.4",
    "lodash": "^4.17.21",
    "mixstream-shared": "workspace:0.0.1-alpha.1",
    "react": "^18.1.0",
    "react-contexify": "^5.0.0",
    "react-dom": "^18.1.0",
    "react-icons": "^4.3.1",
    "react-intl": "^5.25.1",
    "react-router-dom": "^6.3.0",
    "react-use": "^17.3.2",
    "web-vitals": "^2.1.4",
    "white-web-sdk": "2.16.10"
  },
  "devDependencies": {
    "@babel/core": "^7.17.10",
    "@babel/plugin-syntax-flow": "^7.14.5",
    "@babel/plugin-transform-react-jsx": "^7.14.9",
    "@testing-library/dom": "7.21.4",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.2.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.0",
    "@types/node": "^16.11.33",
    "@types/react": "^18.0.9",
    "@types/react-dom": "^18.0.3",
    "concurrently": "^7.1.0",
    "cross-env": "^7.0.3",
    "customize-cra": "^1.0.0",
    "electron-builder": "^23.0.3",
    "react-app-rewired": "^2.2.1",
    "react-scripts": "5.0.1",
    "electron": "12.0.0",
    "rimraf": "^3.0.2",
    "typescript": "^4.6.4",
    "webpack-node-externals": "^3.0.0"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "build": {
    "extends": null,
    "asar": true,
    "asarUnpack": [
      "node_modules/agora-rdc-core/**/*",
      "node_modules/agora-electron-sdk/**/*"
    ],
    "afterPack": "./after-pack.js",
    "files": [
      "build/**/*",
      "node_modules/**/*",
      "!**/node_modules/**/{CHANGELOG.md,README.md,README,readme.md,README.zh.md}",
      "!**/node_modules/**/{nodemon.json,rollup.config.js,tsconfig.json,typedoc.json,rc_message.proto}",
      "!**/node_modules/**/*.{ts,h,cc,cpp,gyp,map,hpp,mm,proto,cmd,tar.gz,a,la,inc,pc,dSYM}",
      "!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}",
      "!**/node_modules/.bin",
      "!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}",
      "!.editorconfig",
      "!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}",
      "!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}",
      "!**/{appveyor.yml,.travis.yml,circle.yml}",
      "!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}"
    ],
    "artifactName": "${productName}-v${version}-${os}-${arch}.${ext}",
    "productName": "Mixstream",
    "appId": "io.agora.mixstream",
    "mac": {
      "target": "dmg",
      "entitlements": "entitlements.mac.plist",
      "hardenedRuntime": true,
      "extendInfo": {
        "NSMicrophoneUsageDescription": "请允许本程序访问您的麦克风",
        "NSCameraUsageDescription": "请允许本程序访问您的摄像头"
      }
    },
    "win": {
      "target": "nsis",
      "requestedExecutionLevel": "requireAdministrator"
    },
    "nsis": {
      "license": "./eula.txt"
    }
  }
}
